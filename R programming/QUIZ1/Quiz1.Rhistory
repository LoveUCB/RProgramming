help --version
--version
r --version
1+1
1-1
1=1=1=1
1=1
if 1=1
max(1,2,3)
max(2,3,4)
q()
rm(list = ls())
getwd()
history()
x <- .Last.value
x
36 = x
a <- b <- c <- 6
x <- .Last.value # 将上一个数值赋值给x
history()
history(100) # 表示load最近的100条记录
history(Inf) # 表示load全部的历史记录
a <- b <- c <- 6
x <- .Last.value # 将上一个数值赋值给x
x
print(x)
median(x = 1:10)
median(x <- 1:10)
x < - 3
x alt+ 3
x alt 3
x <- c(1,10)
x
x <- [1:10]
x <- c[1:10]
x
del x
rm(x)
rm(c(a,b,c))
rm(a,b,c)
q()
max(1,2,3)
min(1,2,3)
median(x = 1:10) # 仅仅在函数内进行参数的赋值，在函数外不进行赋值
x
# x
# Error: object 'x' not found
median(x <- 1:10) # 参数赋值
x
?max
args(max)
installed.packages()[,c("Package","Version")]
mean(1,2,3)
mean(c(1,2,3))
median(c(1,2,5))
write.table(aa,                     # 数据框
file = "homework/group_1",  # 文件路径和名称
append = FALSE,         # 是否追加写入（覆盖原文件）
quote = TRUE,           # 是否使用引号
sep = ' ',              # 分隔符
eol = '\n',             # 行尾符
na = 'NA',              # 缺失值表示
row.names = TRUE,       # 是否包含行名
colnames = TRUE)        # 是否包含列名
write.table(aa,                     # 数据框
file = "homework/group_1",  # 文件路径和名称
append = FALSE,         # 是否追加写入（覆盖原文件）
quote = TRUE,           # 是否使用引号
sep = ' ',              # 分隔符
eol = '\n',             # 行尾符
na = 'NA',              # 缺失值表示
row.names = TRUE,       # 是否包含行名
col.names = TRUE)        # 是否包含列名
aa<-read.table("homework/group.txt",header=TRUE,sep="\t",na.string=c("NO","NA"))
# 读取数据，header = TRUE表示将第一行作为表头，sep = \t表示\t作为分隔符，na.string = c('NO','NA') 表示默认这两个为NA数据
write.table(aa,                     # 数据框
file = "homework/group_1",  # 文件路径和名称
append = FALSE,         # 是否追加写入（覆盖原文件）
quote = TRUE,           # 是否使用引号
sep = ' ',              # 分隔符
eol = '\n',             # 行尾符
na = 'NA',              # 缺失值表示
row.names = TRUE,       # 是否包含行名
col.names = TRUE)        # 是否包含列名
write.table(aa,                     # 数据框
file = "homework/group_1.txt",  # 文件路径和名称
append = FALSE,         # 是否追加写入（覆盖原文件）
quote = TRUE,           # 是否使用引号
sep = ' ',              # 分隔符
eol = '\n',             # 行尾符
na = 'NA',              # 缺失值表示
row.names = TRUE,       # 是否包含行名
col.names = TRUE)        # 是否包含列名
rm(list = ls())
remove(aa)
dat_group <- read.table("homework/group.txt",header = TRUE,sep = '\t')
dat_group <- read.table("homework\group.txt",header = TRUE,sep = '\t')
dat_group <- read.table("homework/group.txt",header = TRUE,sep = '\t')
dat_group <- read.table("homework/group.txt", header = TRUE, sep = '\t')
aa<-read.table("homework/group.txt",header=TRUE,sep="\t",na.string=c("NO","NA"))
# 读取数据，header = TRUE表示将第一行作为表头，sep = \t表示\t作为分隔符，na.string = c('NO','NA') 表示默认这两个为NA数据
dat_group <- read.table("../homework/group.txt", header = TRUE, sep = '\t')
dat_group$Name
dat_group$Group
dat_group$Score
dat_group
median(dat_group$Score)
median(dat_group$Score, na.rm = TRUE)
dat_group <- read.table("../homework/group.txt", header = TRUE, sep = '\t', na.strings = c('NA','NO'))
median(dat_group$Score)
median(dat_group$Score, na.rm = TRUE)
install.packages("packagename")
remove.packages("packagename")
V[0] # unlike python, the first index is one
V <- c(1, 2, NA, 4, 5, 6, 1.1, 1.2)
V[0] # unlike python, the first index is one
V <- c(1, 2, 3, 4, 5, 6, 1.1, 1.2)
V
V + V
V + V
V - V
V * V
V / V
V <- c(1, 2, NA, 4, 5, 6, 1.1, 1.2)
V + V
NA + 1
V + 1
V / V; V / 2
V <- c(1, -1, 0)
V / 0
V[2:6]
V <- c(1, 2, NA, 4, 5, 6, 1.1, 1.2)
V[2:6]
V <- 1:10
V
V[2:6:2] # unlike python, 2-6
X <- 1:24
dim(X) <- c(3,4,2) # define the dim
X
# transfer the dim
dim(X) <- c(4,6)
X
X <- array(0, dim = c(3,4,2))
X
x1 <- c(1,2,3,4)
x2 <- c(5,6,7,8)
X <- rbind(x1, x2) # row
X
X <- cbind(x1, x2) # column
X
X
X[1,]
X[,1]
X[1,]
X[,1]
X[c(1,2),]
savehistory() # 保存历史记录
?sink
sample_data <- data.frame(
name = c("Geeks1", "Geeks2", "Geeks3", "Geeks4", "Geeks5", "Geeks6"),
value = c(11, 15, 10, 23, 32, 53)
)
write.table(sample_data,                     # 数据框
file = "111/sample.txt",  # 文件路径和名称
append = FALSE,         # 是否追加写入（覆盖原文件）
quote = FALSE,           # 是否使用引号
sep = '\t',              # 分隔符 默认为空格
eol = '\n',             # 行尾符
na = 'NA',              # 缺失值表示
row.names = TRUE,       # 是否包含行名
col.names = TRUE)       # 是否包含列名
View(sample_data)
write.table(sample_data,                     # 数据框
file = "111/sample.txt",  # 文件路径和名称
append = FALSE,         # 是否追加写入（覆盖原文件）
quote = FALSE,           # 是否使用引号
sep = '\t',              # 分隔符 默认为空格
eol = '\n',             # 行尾符
na = 'NA',              # 缺失值表示
row.names = FALSE,       # 是否包含行名
col.names = TRUE)       # 是否包含列名
install.packages("xlsx")
library("xlsx")
data("iris")
iris
Titanic
library("xlsx")
library("xlsx")
?read.xlsx
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("quiz/group.xlsx", sheetIndex, header = TRUE, na.strings = c("NO", "NA"))
View(group)
group <- read.xlsx("quiz/group.xlsx", sheetIndex, header = TRUE)
View(group)
group <- read.xlsx("quiz/group.xlsx", sheetIndex, header = TRUE, na = c('NA', 'NO'))
View(group)
# save .Rdata and .Rhistory
save.image()
savehistory()
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
save.image()
# save .Rdata and .Rhistory
save.image("quiz/Quiz1.RData")
savehistory("quiz/Quiz1.Rhistory")
rm(list = ls())
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("quiz/group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
group <- read.table(group, na.strings = c("NO", "NA"))
View(group)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
rm(list = ls())
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
# output processed data into csv file
write.csv(group_processed, file = "Quiz1.csv", append = FALSE, quote = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
rm(list = ls())
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
?read.xlsx
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
group <- read.xlsx("quiz/group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
# output processed data into csv file
write.table(group_processed, file = "Quiz1.csv", sep = ',',  append = FALSE, quote = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
save.image()
savehistory()
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("quiz/group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
# output processed data into csv file
write.table(group_processed, file = "Quiz1.csv", sep = ',',  append = FALSE, quote = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
setwd("quiz")
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
# output processed data into csv file
write.table(group_processed, file = "Quiz1.csv", sep = ',',  append = FALSE, quote = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
setwd("quiz")
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
file.remove('group_raw.txt') # delete the file generated during the process
# output processed data into csv file
write.table(group_processed, file = "Quiz1.csv", sep = ',',  append = FALSE, quote = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
?save.image
setwd("2230416016_王景然")
# install the R package "xlsx"
install.packages("xlsx")
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
file.remove('group_raw.txt') # delete the file generated during the process
# output processed data into csv file
write.table(group_processed, file = "Quiz1.csv", sep = ',',  append = FALSE, quote = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
savehistory("Quiz1.Rhistory")
View(group_processed)
setwd("2230416016_王景然")
# load data from the given xlsx file
library("xlsx")
sheetIndex <- 1
group <- read.xlsx("group.xlsx", sheetIndex, header = TRUE)
# unify na strings into "NA"
write.table(group, file = "group_raw.txt", sep = "\t", append = FALSE, quote = FALSE)
group_processed <- read.table("group_raw.txt", header = TRUE, na.strings = c("NO", "NA"))
file.remove('group_raw.txt') # delete the file generated during the process
# output processed data into csv file
write.table(group_processed, file = "Quiz1.csv", sep = ',',  append = FALSE, quote = FALSE,row.names = FALSE)
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
setwd("2230416016_王景然") # set directory name
# save .Rdata and .Rhistory
save.image("Quiz1.RData")
savehistory("Quiz1.Rhistory")
